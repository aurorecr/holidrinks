{"ast":null,"code":"var _jsxFileName = \"/Users/aurorecr/Desktop/project_3_holydrinks/holidrinks/src/shared/components/Navigation/SideDrawer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group'; // transition effect library for burger menu for ex\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  // Use props.children on components that represent ‘generic boxes’ and that don’t know their children ahead of time, which is the case for a sidebar\n  const content = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: props.children,\n    timeout: 200,\n    classNames: \"slide-in-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"slide-in-left className\", /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"side-drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, props.children));\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n}; // React DOM can do more than render a method.\n// I can use React DOM.createPortal to tell React which content to render, where.\n//  Here the place in the DOM where this content should be rendered when this component\n// is mounted and used.\n// I used the ID I just assigned there which is the drawer hook.  \n\n\nexport default SideDrawer;","map":{"version":3,"sources":["/Users/aurorecr/Desktop/project_3_holydrinks/holidrinks/src/shared/components/Navigation/SideDrawer.js"],"names":["React","ReactDOM","CSSTransition","SideDrawer","props","content","children","createPortal","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,aAAR,QAA4B,wBAA5B,C,CACA;;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC5B;AACA,QAAMC,OAAO,gBACT,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAGD,KAAK,CAACE,QAA1B;AAAoC,IAAA,OAAO,EAAE,GAA7C;AAAkD,IAAA,UAAU,EAAC,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGA;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCF,KAAK,CAACE,QAAtC,CAHA,CADJ;AAOA,SAAOL,QAAQ,CAACM,YAAT,CAAsBF,OAAtB,EAA+BG,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAA/B,CAAP;AACC,CAVD,C,CAWA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,UAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CSSTransition} from 'react-transition-group';\n// transition effect library for burger menu for ex\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n// Use props.children on components that represent ‘generic boxes’ and that don’t know their children ahead of time, which is the case for a sidebar\nconst content = (\n    <CSSTransition in ={props.children} timeout={200} classNames=\"slide-in-left\">\n    {/* timeout for the duration of the animation, seconds */}\n    slide-in-left className \n    <aside className=\"side-drawer\">{props.children}</aside>\n    </CSSTransition>);\n\nreturn ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n// React DOM can do more than render a method.\n// I can use React DOM.createPortal to tell React which content to render, where.\n//  Here the place in the DOM where this content should be rendered when this component\n// is mounted and used.\n// I used the ID I just assigned there which is the drawer hook.  \n\nexport default SideDrawer;"]},"metadata":{},"sourceType":"module"}