{"ast":null,"code":"var _jsxFileName = \"/Users/aurorecr/Desktop/project_3_holydrinks/holidrinks/src/events/components/EventItem.js\";\nimport React, { useState } from 'react';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport './EventItem.css';\n\nconst EventItem = props => {\n  const [showMap, setShowMap] = useState(false); //showMap is initialy false so we don't show the model yet\n\n  const openMapHandler = () => setShowMap(true); //open the map\n\n\n  const closeMapHandler = () => setShowMap(false); //close the map\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    show: showMap,\n    onCancel: closeMapHandler //The cxl handler here is in the end of the function triggered in the backdrop in Modal.js when I click on {props.onCancel}\n    ,\n    header: props.address,\n    contentClass: \"place-item__modal-content\",\n    footerClass: \"place-item__modal-actions\",\n    footer: /*#__PURE__*/React.createElement(Button, {\n      onClick: closeMapHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, \"Close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Map\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"event-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"event-item__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-item__image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image,\n    alt: props.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Organised by \", props.creatorId), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, props.address), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, props.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-item__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"View on map\"), /*#__PURE__*/React.createElement(Button, {\n    to: '/event/${props.id}',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n};\n\nexport default EventItem;","map":{"version":3,"sources":["/Users/aurorecr/Desktop/project_3_holydrinks/holidrinks/src/events/components/EventItem.js"],"names":["React","useState","Modal","Button","Card","EventItem","props","showMap","setShowMap","openMapHandler","closeMapHandler","address","image","title","creatorId","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AAEA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC,CADuB,CAEvB;;AAEA,QAAMQ,cAAc,GAAG,MAAMD,UAAU,CAAC,IAAD,CAAvC,CAJuB,CAKvB;;;AACA,QAAME,eAAe,GAAG,MAAMF,UAAU,CAAC,KAAD,CAAxC,CANuB,CAOvB;;;AAEA,sBACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,KAAD;AACE,IAAA,IAAI,EAAED,OADR;AAEE,IAAA,QAAQ,EAAEG,eAFZ,CAGA;AAHA;AAIE,IAAA,MAAM,EAAEJ,KAAK,CAACK,OAJhB;AAKE,IAAA,YAAY,EAAC,2BALf;AAME,IAAA,WAAW,EAAC,2BANd;AAOE,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CATF,CAFJ,eAeA;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACM,KAAhB;AAAuB,IAAA,GAAG,EAAEN,KAAK,CAACO,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBP,KAAK,CAACQ,SAAxB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAK,CAACK,OAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACS,WAAV,CAHJ,CAJA,eASA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAE,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CATA,CADJ,CAfA,CADA;AAoCH,CA7CD;;AA+CA,eAAeV,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Button from '../../shared/components/FormElements/Button'\nimport Card from '../../shared/components/UIElements/Card';\n\nimport './EventItem.css'\n\nconst EventItem = props => {\n    const [showMap, setShowMap] = useState(false);\n    //showMap is initialy false so we don't show the model yet\n\n    const openMapHandler = () => setShowMap(true);\n    //open the map\n    const closeMapHandler = () => setShowMap(false);\n    //close the map\n\n    return (\n    <React.Fragment>\n    {/* it won't  be rendered there, the portal both on the backdrop and modal overlay all to inject in a different place in the index.html file  */}\n        <Modal\n          show={showMap}\n          onCancel={closeMapHandler}\n        //The cxl handler here is in the end of the function triggered in the backdrop in Modal.js when I click on {props.onCancel}\n          header={props.address}\n          contentClass=\"place-item__modal-content\"\n          footerClass=\"place-item__modal-actions\"\n          footer={<Button onClick={closeMapHandler}>Close</Button>}\n        >\n          <div className=\"map-container\">\n            <h2>Map</h2>\n          </div>\n        </Modal>\n    <li className=\"event-item\">\n        <Card className=\"event-item__content\">\n        <div className=\"event-item__image\">\n            <img src={props.image} alt={props.title}/>\n        </div>\n        <div>\n            <h2>Organised by {props.creatorId}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n        </div>\n        <div className=\"event-item__actions\">\n            <Button inverse>View on map</Button>\n            <Button to={'/event/${props.id}'}>Edit</Button>\n            {/* here the 'id' of that event */}\n            <Button danger>Delete</Button>\n        </div>\n        </Card>\n    </li>\n    </React.Fragment>\n    );\n};\n\nexport default EventItem;"]},"metadata":{},"sourceType":"module"}